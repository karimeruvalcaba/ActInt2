name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run Unit Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential lcov gcovr

      - name: Configure and Build with Coverage
        run: |
          mkdir build
          cd build
          cmake -DENABLE_COVERAGE=ON ..
          cmake --build .

      - name: Run Tests and Generate Coverage Report
        run: |
          cd build
          ctest --output-on-failure
          gcovr --root .. --exclude 'tests/*' --exclude 'build/*' --sonarqube -o coverage.xml --print-summary

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/coverage.xml

  build_analysis:
    name: Build and Analyze with SonarQube
    runs-on: ubuntu-latest
    needs: tests  # Ensures tests run first before analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for better analysis

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: build/

      - name: Run SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Enforce Quality Gate
      # - name: SonarQube Quality Gate Check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
